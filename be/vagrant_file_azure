# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'vagrant-azure'
# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = 'azure'
  #config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder ".", "/vagrant", type: "smb"
  #config.vm.synced_folder "src/", "/srv/website", owner: "vagrant", group: "vagrant"
  #config.vm.synced_folder ".", "/vagrant", disabled: false, type: 'rsync'


  config.vm.provider :azure do |azure, override|

    # each of the below values will default to use the env vars named as below if not specified explicitly
    azure.tenant_id = '5675d321-19d1-4c95-9684-2c28ac8f80a4'
    azure.client_id = 'd0cadb6f-276b-4447-b58a-d576deeaf192'
    azure.client_secret = 'f6fed981-6309-4e0e-b3f4-5beda7f0e050'
    azure.subscription_id = '1f2c061e-6792-4bbf-8f12-19e4c04a9a53'
    azure.vm_name = 'hcpospocbe'
    #azure.vm_boot_diagnostics = true

    azure.resource_group_name = 'hcpospoc'
    azure.location = 'centralindia'
    azure.vm_size = 'Standard_B1s'
    azure.vm_image_urn = 'canonical:ubuntuserver:16.04-LTS:latest'
    azure.instance_ready_timeout = 600
    #azure.vm_user = 'vagrant'
    #azure.vm_password = 'vagrant'
    #azure.tcp_endpoints = '3389:53389'
    azure.admin_username = 'vagrant'
    override.winrm.transport = :ssl
    override.winrm.port = 5986
    override.winrm.ssl_peer_verification = false # must be false if using a self signed cert
    #override.ssh.username = "ubuntu"
    #override.ssh.private_key_path = "C:\\keys\\blerp.pem"





  end

  #config.vm.host_name = "hcpospoc.local.dev"
  #config.vm.network "forwarded_port", host_ip: "127.0.0.1", guest: 8080, host: 8080
  #config.ssh.port = '22'
  #config.ssh.username = 'vagrant'
  #config.ssh.password = 'vagrant'
  #config.ssh.insert_key = false
  #config.ssh.private_key_path = './azure_ssh_key'
  #config.vm.provision "file", source: './azure_ssh_key.pub', destination: '~/.ssh/authorized_keys'
  #config.ssh.private_key_path = ['./azure_ssh_key', './azure_ssh_key.pub']
  #config.vm.provision "file", source: './azure_ssh_key.pub', destination: '~/.ssh/authorized_keys'

  #config.vm.provision "shell", inline: 'sudo mkdir /vagrant/'
  #config.vm.provision "shell", inline: 'sudo chown -fR vagrant /vagrant/'
  #config.vm.synced_folder 'src/', '/vagrant'
  #config.vm.provision "file", source: './pip_requirements.txt', destination: '/vagrant/'

  #config.ssh.username = 'ubuntu'
  #config.ssh.password = 'vagrant'

  #config.vm.provider "virtualbox" do |v|
  #  v.name = "hcpospoc_dev"
  #end


  $script = <<-SCRIPT
    echo "--- PROVISIONING APP ---"

    echo "... creating virtual environment - hcposapp_be_dev ..."
    source /home/vagrant/.bashrc
    export WORKON_HOME=~/.virtualenvs
    export PROJECT_HOME=/vagrant
    source /usr/local/bin/virtualenvwrapper.sh



    mkvirtualenv --python=python3 hcposapp_be_dev
    workon hcposapp_be_dev
    pip3 install -r /vagrant/pip_requirements.txt

    #pip3 install djangorestframework
    #pip3 install markdown
    #pip3 install django-filter


    echo "--- END OF APP PROVISIONING ---"


  SCRIPT

  config.vm.provision "shell", inline: <<-SHELL

    echo "--- PROVISIONING ENV ---"

    sudo apt-get update
    sudo apt-get -y upgrade

    sudo apt-get install -y nfs-kernel-server # DEV func

    # Set Ubuntu Language
    sudo locale-gen en_GB.UTF-8

    # Install Python, SQLite and pip
    sudo apt-get install -y python3-dev

    sudo apt-get install -y sqlite
    sudo apt-get install -y python-pip

    sudo pip install --upgrade pip


    # Install and configure python virtualenvwrapper.
    echo "installing virtualenvwrapper"
    sudo pip install virtualenvwrapper
    if ! grep -q VIRTUALENV_ALREADY_ADDED /home/vagrant/.bashrc; then
        echo "# VIRTUALENV_ALREADY_ADDED" >> /home/vagrant/.bashrc
        echo "WORKON_HOME=~/.virtualenvs" >> /home/vagrant/.bashrc
        echo "PROJECT_HOME=/vagrant" >> /home/vagrant/.bashrc
        echo "source /usr/local/bin/virtualenvwrapper.sh" >> /home/vagrant/.bashrc
    fi

    echo "installing python3 libs"
    sudo apt-get install -y python3-pip
    sudo pip3 install --upgrade pip

    #echo "ubuntu:vagrant" | sudo chpasswd
    echo "--- END OF ENVIRONMENT PROVISIONING ---"

  SHELL

  config.vm.provision "shell", inline: $script, privileged: false
  #config.vm.provision "shell", path: "dev_app_provision.sh", privileged: false

end
